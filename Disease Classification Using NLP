{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9076301,"sourceType":"datasetVersion","datasetId":5475380}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Import dependencies","metadata":{}},{"cell_type":"code","source":"import pandas as pd # data preprocessing\nimport itertools #confusion matrix\nimport string\nimport numpy as np\nimport seaborn as sns\nfrom sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import PassiveAggressiveClassifier\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt\n%matplotlib inline\n# to show all rows of dataframe\npd.set_option('display.max_rows', None)","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:31:37.914551Z","iopub.execute_input":"2024-08-01T03:31:37.914967Z","iopub.status.idle":"2024-08-01T03:31:39.622975Z","shell.execute_reply.started":"2024-08-01T03:31:37.914932Z","shell.execute_reply":"2024-08-01T03:31:39.621555Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/drugreviews/drugsComTrain_raw.tsv', sep='\\t')","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:31:42.949355Z","iopub.execute_input":"2024-08-01T03:31:42.950185Z","iopub.status.idle":"2024-08-01T03:31:45.134753Z","shell.execute_reply.started":"2024-08-01T03:31:42.950149Z","shell.execute_reply":"2024-08-01T03:31:45.132763Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:31:45.137775Z","iopub.execute_input":"2024-08-01T03:31:45.138385Z","iopub.status.idle":"2024-08-01T03:31:45.175208Z","shell.execute_reply.started":"2024-08-01T03:31:45.138344Z","shell.execute_reply":"2024-08-01T03:31:45.173914Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.condition.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:31:52.188044Z","iopub.execute_input":"2024-08-01T03:31:52.189453Z","iopub.status.idle":"2024-08-01T03:31:52.250651Z","shell.execute_reply.started":"2024-08-01T03:31:52.189392Z","shell.execute_reply":"2024-08-01T03:31:52.249417Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_train = df[(df['condition']=='Birth Control') | (df['condition']=='Depression') | (df['condition']=='High Blood Pressure') | (df['condition']=='Diabetes, Type 2')]","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:35:30.562615Z","iopub.execute_input":"2024-08-01T03:35:30.563028Z","iopub.status.idle":"2024-08-01T03:35:30.701803Z","shell.execute_reply.started":"2024-08-01T03:35:30.562990Z","shell.execute_reply":"2024-08-01T03:35:30.700284Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:35:48.921552Z","iopub.execute_input":"2024-08-01T03:35:48.921959Z","iopub.status.idle":"2024-08-01T03:35:48.930306Z","shell.execute_reply.started":"2024-08-01T03:35:48.921928Z","shell.execute_reply":"2024-08-01T03:35:48.928678Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df_train.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:35:57.204644Z","iopub.execute_input":"2024-08-01T03:35:57.205107Z","iopub.status.idle":"2024-08-01T03:35:57.213628Z","shell.execute_reply.started":"2024-08-01T03:35:57.205070Z","shell.execute_reply":"2024-08-01T03:35:57.212246Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X = df_train.drop(['Unnamed: 0','drugName','rating','date','usefulCount'], axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:39:28.737279Z","iopub.execute_input":"2024-08-01T03:39:28.738520Z","iopub.status.idle":"2024-08-01T03:39:28.748612Z","shell.execute_reply.started":"2024-08-01T03:39:28.738478Z","shell.execute_reply":"2024-08-01T03:39:28.747212Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# EDA","metadata":{}},{"cell_type":"code","source":"X.condition.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:40:11.662318Z","iopub.execute_input":"2024-08-01T03:40:11.662849Z","iopub.status.idle":"2024-08-01T03:40:11.694880Z","shell.execute_reply.started":"2024-08-01T03:40:11.662804Z","shell.execute_reply":"2024-08-01T03:40:11.693384Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:40:57.310258Z","iopub.execute_input":"2024-08-01T03:40:57.310699Z","iopub.status.idle":"2024-08-01T03:40:57.323627Z","shell.execute_reply.started":"2024-08-01T03:40:57.310665Z","shell.execute_reply":"2024-08-01T03:40:57.321958Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_birth = X[(X['condition']=='Birth Control')]\nX_dep = X[(X['condition']=='Depression')]\nX_bp = X[(X['condition']=='High Blood Pressure')]\nX_diab = X[(X['condition']=='Diabetes, Type 2')]","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:45:25.978376Z","iopub.execute_input":"2024-08-01T03:45:25.979077Z","iopub.status.idle":"2024-08-01T03:45:26.039173Z","shell.execute_reply.started":"2024-08-01T03:45:25.979030Z","shell.execute_reply":"2024-08-01T03:45:26.037440Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from wordcloud import WordCloud\nplt.figure(figsize = (20,20))\nwc = WordCloud(max_words = 500, width = 1600, height = 800).generate(\" \".join(X_birth.review))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.title('Word Cloud for Birth Control', fontsize=14)","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:50:52.686581Z","iopub.execute_input":"2024-08-01T03:50:52.687021Z","iopub.status.idle":"2024-08-01T03:51:10.762237Z","shell.execute_reply.started":"2024-08-01T03:50:52.686977Z","shell.execute_reply":"2024-08-01T03:51:10.761064Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from wordcloud import WordCloud\nplt.figure(figsize = (20,20))\nwc = WordCloud(max_words = 500, width = 1600, height = 800).generate(\" \".join(X_dep.review))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.title('Word Cloud for Depression', fontsize=14)","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:53:30.855792Z","iopub.execute_input":"2024-08-01T03:53:30.856367Z","iopub.status.idle":"2024-08-01T03:53:41.208565Z","shell.execute_reply.started":"2024-08-01T03:53:30.856335Z","shell.execute_reply":"2024-08-01T03:53:41.207427Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from wordcloud import WordCloud\nplt.figure(figsize = (20,20))\nwc = WordCloud(max_words = 500, width = 1600, height = 800).generate(\" \".join(X_diab.review))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.title('Word Cloud for Diabetes', fontsize=14)","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:54:01.135227Z","iopub.execute_input":"2024-08-01T03:54:01.135649Z","iopub.status.idle":"2024-08-01T03:54:08.795465Z","shell.execute_reply.started":"2024-08-01T03:54:01.135616Z","shell.execute_reply":"2024-08-01T03:54:08.794224Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from wordcloud import WordCloud\nplt.figure(figsize = (20,20))\nwc = WordCloud(max_words = 500, width = 1600, height = 800).generate(\" \".join(X_bp.review))\nplt.imshow(wc, interpolation = 'bilinear')\nplt.title('Word Cloud for High Blood Pressure', fontsize=14)","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:54:31.379633Z","iopub.execute_input":"2024-08-01T03:54:31.381019Z","iopub.status.idle":"2024-08-01T03:54:38.987146Z","shell.execute_reply.started":"2024-08-01T03:54:31.380974Z","shell.execute_reply":"2024-08-01T03:54:38.985848Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Data Pre-Processing","metadata":{}},{"cell_type":"code","source":"X['review'][2]","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:55:58.541188Z","iopub.execute_input":"2024-08-01T03:55:58.541578Z","iopub.status.idle":"2024-08-01T03:55:58.550460Z","shell.execute_reply.started":"2024-08-01T03:55:58.541548Z","shell.execute_reply":"2024-08-01T03:55:58.549189Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X['review'][11]","metadata":{"execution":{"iopub.status.busy":"2024-08-01T03:56:12.266529Z","iopub.execute_input":"2024-08-01T03:56:12.266965Z","iopub.status.idle":"2024-08-01T03:56:12.275049Z","shell.execute_reply.started":"2024-08-01T03:56:12.266930Z","shell.execute_reply":"2024-08-01T03:56:12.273553Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"for i, col in enumerate(X.columns):\n    X.iloc[:,i] = X.iloc[:,i].str.replace('\"','')","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:01:44.479047Z","iopub.execute_input":"2024-08-01T04:01:44.479499Z","iopub.status.idle":"2024-08-01T04:01:44.561610Z","shell.execute_reply.started":"2024-08-01T04:01:44.479464Z","shell.execute_reply":"2024-08-01T04:01:44.560033Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# to set width of col to max\npd.set_option('max_colwidth',None)","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:04:00.090524Z","iopub.execute_input":"2024-08-01T04:04:00.090993Z","iopub.status.idle":"2024-08-01T04:04:00.097007Z","shell.execute_reply.started":"2024-08-01T04:04:00.090957Z","shell.execute_reply":"2024-08-01T04:04:00.095571Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:04:03.200729Z","iopub.execute_input":"2024-08-01T04:04:03.201171Z","iopub.status.idle":"2024-08-01T04:04:03.213586Z","shell.execute_reply.started":"2024-08-01T04:04:03.201119Z","shell.execute_reply":"2024-08-01T04:04:03.212360Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Dealing with StopWords\nStop words are the most common words in any natural language. They dont help in getting insights from a natural language. Examples- \"the\", \"is\", \"where\", \"when\", etc.","metadata":{}},{"cell_type":"code","source":"from nltk.corpus import stopwords\nstop = stopwords.words('english')","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:42:39.176917Z","iopub.execute_input":"2024-08-01T04:42:39.178207Z","iopub.status.idle":"2024-08-01T04:42:39.188111Z","shell.execute_reply.started":"2024-08-01T04:42:39.178166Z","shell.execute_reply":"2024-08-01T04:42:39.186743Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"stop","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:42:39.637649Z","iopub.execute_input":"2024-08-01T04:42:39.638105Z","iopub.status.idle":"2024-08-01T04:42:39.650643Z","shell.execute_reply.started":"2024-08-01T04:42:39.638069Z","shell.execute_reply":"2024-08-01T04:42:39.649343Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Lemmatization\n\nLemmatization helps in finding the root word from a word alternate child version. It produces a word's lemma. For example, \"am\" -> \"be\"(lemma)\n\nNote- Stemming is a similar thing where it does not produce the lemma  but instead gives the stem word.","metadata":{}},{"cell_type":"code","source":"from nltk.stem import WordNetLemmatizer\nfrom nltk.stem import PorterStemmer\n\nporter = PorterStemmer()\n\nlemmatizer = WordNetLemmatizer()","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:56:09.516028Z","iopub.execute_input":"2024-08-01T04:56:09.516511Z","iopub.status.idle":"2024-08-01T04:56:09.522528Z","shell.execute_reply.started":"2024-08-01T04:56:09.516476Z","shell.execute_reply":"2024-08-01T04:56:09.521153Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(porter.stem(\"sportingly\"))","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:51:35.885888Z","iopub.execute_input":"2024-08-01T04:51:35.886339Z","iopub.status.idle":"2024-08-01T04:51:35.892602Z","shell.execute_reply.started":"2024-08-01T04:51:35.886309Z","shell.execute_reply":"2024-08-01T04:51:35.891333Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import nltk\nnltk.download('wordnet')\n","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:56:38.541066Z","iopub.execute_input":"2024-08-01T04:56:38.542238Z","iopub.status.idle":"2024-08-01T04:56:38.553757Z","shell.execute_reply.started":"2024-08-01T04:56:38.542194Z","shell.execute_reply":"2024-08-01T04:56:38.552441Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(lemmatizer.lemmatize(\"becoming\"))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from bs4 import BeautifulSoup\nimport re","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:43:01.327250Z","iopub.execute_input":"2024-08-01T04:43:01.327635Z","iopub.status.idle":"2024-08-01T04:43:01.333029Z","shell.execute_reply.started":"2024-08-01T04:43:01.327606Z","shell.execute_reply":"2024-08-01T04:43:01.331674Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def review_to_words(raw_review):\n    # 1. Delete HTML\n    review_text = BeautifulSoup(raw_review,'html.parser').get_text()\n    # 2. Make a space \n    letters_only = re.sub('[^a-zA-Z]','',review_text)\n    # 3. Lower letters\n    words = letters_only.lower().split()\n    # 4. Stopwords\n    meaningful_words = [w for w in words if not w in stop]\n    # 5. Lemmatization\n    lemmatize_words = [lemmatizer.lemmatize(w) for w in meaningful_words]\n    # 6. Space join words\n    return(' '.join(lemmatize_words))","metadata":{"execution":{"iopub.status.busy":"2024-08-01T04:46:21.691371Z","iopub.execute_input":"2024-08-01T04:46:21.691848Z","iopub.status.idle":"2024-08-01T04:46:21.699690Z","shell.execute_reply.started":"2024-08-01T04:46:21.691814Z","shell.execute_reply":"2024-08-01T04:46:21.698499Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X['review_clean'] = X['review'].apply(review_to_words)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X.head()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_feat = X['review_clean']\ny = X['condition']","metadata":{},"execution_count":null,"outputs":[]}]}